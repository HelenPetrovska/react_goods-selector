{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectedHandler","good","setState","prevState","removeHandler","splice","indexOf","updateGoods","includes","clearHandler","getGoodTitle","goodsArray","length","slice","join","this","className","map","classNames","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAMMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,gBAAkB,SAACC,GACjB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,aAAa,GAAD,mBAAMI,EAAUJ,cAAhB,CAA8BE,S,EAI9CG,cAAgB,SAACH,GACf,EAAKC,UAAS,SAACC,GAGb,OAFAA,EAAUJ,aAAaM,OAAOF,EAAUJ,aAAaO,QAAQL,GAAO,GAE7D,CAAEF,aAAcI,EAAUJ,kB,EAIrCQ,YAAc,SAACN,GACR,EAAKH,MAAMC,aAAaS,SAASP,GAGpC,EAAKG,cAAcH,GAFnB,EAAKD,gBAAgBC,I,EAMzBQ,aAAe,WACb,EAAKP,SAAS,CACZH,aAAc,M,EAIlBW,aAAe,WACb,IAAMC,EAAa,EAAKb,MAAMC,aAE9B,OAAQY,EAAWC,QACjB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUD,EAAW,GAArB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAW,GAArB,gBAA+BA,EAAW,GAA1C,iBACF,QACE,MAAM,GAAN,OAAUA,EAAWE,MAAM,EAAGF,EAAWC,OAAS,GAAGE,KAAK,MAA1D,2BACQH,EAAWA,EAAWC,OAAS,GADvC,mB,4CAKN,WAAU,IAAD,OACCb,EAAiBgB,KAAKjB,MAAtBC,aAER,OACE,sBAAKiB,UAAU,QAAf,UAEIjB,GACE,oBAAIiB,UAAU,cAAd,SACGpB,EAAgBqB,KAAI,SAAChB,GAAD,OACnB,qBAEEe,UAAWE,IACT,cACA,CAAE,sBAAuBnB,EAAaS,SAASP,KAJnD,UAOE,sBAAMe,UAAU,cAAhB,SACGf,IAEH,wBACEkB,KAAK,SACLH,UAAU,uBACVI,QAAS,WACP,EAAKb,YAAYN,IAJrB,SAQMF,EAAaS,SAASP,GAEpB,SADA,eAlBHA,QA4BdF,EAAaa,OAAS,GACrB,wBACEO,KAAK,SACLH,UAAU,6BACVI,QAASL,KAAKN,aAHhB,iCASF,oBAAIO,UAAU,eAAd,SAEID,KAAKL,wB,GAnGCW,IAAMC,WA2GTzB,IC/Hf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0354c540.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable react/prefer-stateless-function */\nimport classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood:string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  selectedHandler = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGood: [...prevState.selectedGood, good],\n    }));\n  };\n\n  removeHandler = (good: string) => {\n    this.setState((prevState) => {\n      prevState.selectedGood.splice(prevState.selectedGood.indexOf(good), 1);\n\n      return { selectedGood: prevState.selectedGood };\n    });\n  };\n\n  updateGoods = (good: string) => {\n    if (!this.state.selectedGood.includes(good)) {\n      this.selectedHandler(good);\n    } else {\n      this.removeHandler(good);\n    }\n  };\n\n  clearHandler = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  };\n\n  getGoodTitle = () => {\n    const goodsArray = this.state.selectedGood;\n\n    switch (goodsArray.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${goodsArray[0]} is selected`;\n      case 2:\n        return `${goodsArray[0]} and ${goodsArray[1]} are selected`;\n      default:\n        return `${goodsArray.slice(0, goodsArray.length - 1).join(', ')}\n          and ${goodsArray[goodsArray.length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"goods\">\n        {\n          selectedGood && (\n            <ul className=\"goods__list\">\n              {goodsFromServer.map((good) => (\n                <li\n                  key={good}\n                  className={classNames(\n                    'goods__item',\n                    { 'goods__item--active': selectedGood.includes(good) },\n                  )}\n                >\n                  <span className=\"goods__span\">\n                    {good}\n                  </span>\n                  <button\n                    type=\"button\"\n                    className=\"goods__button button\"\n                    onClick={() => {\n                      this.updateGoods(good);\n                    }}\n                  >\n                    {\n                      (!selectedGood.includes(good))\n                        ? 'selected'\n                        : 'remove'\n                    }\n                  </button>\n                </li>\n              ))}\n            </ul>\n          )\n        }\n\n        {selectedGood.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"goods__clear-button button\"\n            onClick={this.clearHandler}\n          >\n            Clear selected list\n          </button>\n        )}\n\n        <h2 className=\"goods__title\">\n          {\n            this.getGoodTitle()\n          }\n        </h2>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}