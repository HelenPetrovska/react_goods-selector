{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","selectedHandler","good","setState","prevState","removeHandler","splice","indexOf","clearHandler","this","className","map","classNames","includes","type","onClick","length","slice","join","goodTitle","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAMMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,gBAAkB,SAACC,GACjB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,aAAa,GAAD,mBAAMI,EAAUJ,cAAhB,CAA8BE,S,EAI9CG,cAAgB,SAACH,GACf,EAAKC,UAAS,SAACC,GAGb,OAFAA,EAAUJ,aAAaM,OAAOF,EAAUJ,aAAaO,QAAQL,GAAO,GAE7D,CAAEF,aAAcI,EAAUJ,kB,EAIrCQ,aAAe,WACb,EAAKL,SAAS,CACZH,aAAc,M,4CAIlB,WAAU,IAAD,OACCA,EAAiBS,KAAKV,MAAtBC,aAgBR,OACE,sBAAKU,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,SACGb,EAAgBc,KAAI,SAACT,GAAD,OACnB,qBAEEQ,UAAWE,IACT,cACA,CAAE,sBAAuBZ,EAAaa,SAASX,KAJnD,UAOE,sBAAMQ,UAAU,cAAhB,SACGR,IAEH,wBACEY,KAAK,SACLJ,UAAU,uBACVK,QAAS,WACFf,EAAaa,SAASX,GAGzB,EAAKG,cAAcH,GAFnB,EAAKD,gBAAgBC,IAL3B,SAYMF,EAAaa,SAASX,GAEpB,SADA,eAtBHA,QA8BVF,EAAagB,OAAS,GACrB,wBACEF,KAAK,SACLJ,UAAU,6BACVK,QAASN,KAAKD,aAHhB,iCASF,oBAAIE,UAAU,eAAd,SA3Dc,WAChB,OAAQV,EAAagB,QACnB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUhB,EAAa,GAAvB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAa,GAAvB,gBAAiCA,EAAa,GAA9C,iBACF,QACE,MAAM,GAAN,OAAUA,EAAaiB,MAAM,EAAGjB,EAAagB,OAAS,GAAGE,KAAK,MAA9D,6BACQlB,EAAaA,EAAagB,OAAS,GAD3C,kBAoDEG,Y,GAzFMC,IAAMC,WAiGTvB,ICrHfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.141601f1.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable react/prefer-stateless-function */\nimport classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood:string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  selectedHandler = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGood: [...prevState.selectedGood, good],\n    }));\n  };\n\n  removeHandler = (good: string) => {\n    this.setState((prevState) => {\n      prevState.selectedGood.splice(prevState.selectedGood.indexOf(good), 1);\n\n      return { selectedGood: prevState.selectedGood };\n    });\n  };\n\n  clearHandler = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    const goodTitle = () => {\n      switch (selectedGood.length) {\n        case 0:\n          return 'No goods selected';\n        case 1:\n          return `${selectedGood[0]} is selected`;\n        case 2:\n          return `${selectedGood[0]} and ${selectedGood[1]} are selected`;\n        default:\n          return `${selectedGood.slice(0, selectedGood.length - 1).join(', ')}\n            and ${selectedGood[selectedGood.length - 1]} are selected`;\n      }\n    };\n\n    return (\n      <div className=\"goods\">\n        <ul className=\"goods__list\">\n          {goodsFromServer.map((good) => (\n            <li\n              key={good}\n              className={classNames(\n                'goods__item',\n                { 'goods__item--active': selectedGood.includes(good) },\n              )}\n            >\n              <span className=\"goods__span\">\n                {good}\n              </span>\n              <button\n                type=\"button\"\n                className=\"goods__button button\"\n                onClick={() => {\n                  if (!selectedGood.includes(good)) {\n                    this.selectedHandler(good);\n                  } else {\n                    this.removeHandler(good);\n                  }\n                }}\n              >\n                {\n                  (!selectedGood.includes(good))\n                    ? 'selected'\n                    : 'remove'\n                }\n              </button>\n            </li>\n          ))}\n        </ul>\n\n        {selectedGood.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"goods__clear-button button\"\n            onClick={this.clearHandler}\n          >\n            Clear selected list\n          </button>\n        )}\n\n        <h2 className=\"goods__title\">\n          {\n            goodTitle()\n          }\n        </h2>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}